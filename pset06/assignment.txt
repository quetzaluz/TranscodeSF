This assignment puts together what you've learned in the last few lectures about
networks, html, css, serving websites, and databases. It's inspired by a
real-world use case.

Software companies often run tests every night, or even every time someone
commits something to their git repository.  These test runs happen
automatically, and engineers need a way to review the results and act on them.
You might want to know how your last run went, what the last time a particular
test passed was, what the last time a particular test failed was, etc.

This assignment is to design a web interface for engineers to look at their test
runs.

* Run the python file simulatetests.py.  It should show you a (pretend) test
  run, where some tests pass, and some tests fail.

* Run the python file reporter.py, then go to http://127.0.0.1/run/27.  You
  should see a simple web page, which is generated by a template in
  templates/run.html.

Your job is to combine these two things.

* Modify simulatetests.py so that before it runs the test, it creates a test run
  and puts that into the test runs table.  It should then put the results of
  every test into the test results table, and then end the run by saving the end
  time to the test runs table.

* Modify reporter.py (and any associated other files or templates you need) to
  be able to display a test run.  Going to http://127.0.0.1/run/<runnum> should
  display the results of that test run.  Use CSS and HTML to display the test
  results in a pleasant manner, including the result of every test in the run,
  and the start and end time for that run.

* (optional) Make clicking on a test take you to a detail page about that test.
  Include information on the last ten runs of that test and their successes or
  failures, and include the time of the last run the test had a different result
  than it has now.

* (optional) Make a button on the website you can click to run the tests again.
